1- Create a database called 'my_first_db'.	
    use my_first_db
2- Create students collection.    
    db.createCollection("students")
3- Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
4- Create 5 students with the appropriate info.
    db.students.insert({name: "Wijdan", home_state: "jeddah", lucky_number: 8, birthday: {month: 1, day: 5, year: 1995}})
    db.students.insert({name: "student2", home_state: "Washington (Seattle Dojo)", lucky_number: 5, birthday: {month: 1, day: 5, year: 1995}})
    db.students.insert({name: "student3", home_state: "California (San Jose Dojo)", lucky_number: 1, birthday: {month: 1, day: 5, year: 1995}})
    db.students.insert({name: "student4", home_state: "California (San Jose Dojo)", lucky_number: 11, birthday: {month: 1, day: 5, year: 1995}})
    db.students.insert({name: "student5", home_state: "Washington (Seattle Dojo)", lucky_number: 12, birthday: {month: 1, day: 5, year: 1995}})
5- Get all students.
    db.students.find().pretty()
6- Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
    db.students.find({ $or: [{"home_state": "Washington (Seattle Dojo)"} , {"home_state": "California (San Jose Dojo)"}]}).pretty()
7- Get all students whose lucky number is greater than 3
    db.students.find( { lucky_number: { $gt: 3 } } ).pretty()
8- Get all students whose lucky number is less than or equal to 10
    db.students.find( { lucky_number: { $gte: 10 } } ).pretty()
9- Get all students whose lucky number is between 1 and 9 (inclusive)
    db.students.find( { $and: [
        { lucky_number: { $gte: 1 } }, { lucky_number: { $lte: 9 } } 
    ]} ).pretty()
10- Add a field to each student collection called 'interests' that is an ARRAY. It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
    db.students.updateMany({}, {$set: {interests: ['coding', 'brunch', 'MongoDB']}})
11- Add some unique interests for each particular student into each of their interest arrays.
    db.students.update({name: "Wijdan"}, {$push: {interests: "react"}})
12- Add the interest 'taxes' into someone's interest array.
    db.students.update({name: "student4"}, {$push: {interests: "taxes"}})
13- Remove the 'taxes' interest you just added.
    db.students.update({name: "student4"}, {$pull: {interests: "taxes"}})
14- Remove all students who are from California.
    db.students.remove({"home_state": "California (San Jose Dojo)"})
15- Remove a student by name. 
    db.students.remove({"name": "student2"})
16- Remove a student whose lucky number is greater than 5 (JUST ONE)
    db.students.remove({ lucky_number: { $gt: 5 } }, true)
17- Add a field to each student collection called 'number_of_belts' and set it to 0.
    db.students.updateMany({}, {$set: {number_of_belts: 0}})
18- Increment this field by 1 for all students in Washington (Seattle Dojo).
    db.students.updateMany({"home_state": "California (San Jose Dojo)"}, {$inc: {number_of_belts: 1}})
19- Rename the 'number_of_belts' field to 'belts_earned'
    db.students.updateMany({}, {$rename: {"number_of_belts": "belts_earned"}})
20- Remove the 'lucky_number' field.
    db.students.updateMany({}, {$unset: {"lucky_number": ""}})
21- Add a 'updated_on' field, and set the value as the current date.
    db.students.updateMany({}, {$currentDate: { "updated_on":{ $type: "date" } } })